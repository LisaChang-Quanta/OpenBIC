From 5e8a2b5a7a930480c21f2eb82b391f356e9f1cf4 Mon Sep 17 00:00:00 2001
From: Tyrone Ting <kfting@nuvoton.com>
Date: Wed, 23 Jul 2025 10:17:15 +0800
Subject: [PATCH] drivers: i2c: recovery in driver init

1. Do recovery if the bus is busy and at least one of SCL/SDA is not high
   when the i2c driver is initialized.
2. Change the driver initialization level to POST_KERNEL.

Signed-off-by: Tyrone Ting <kfting@nuvoton.com>
---
 drivers/i2c/i2c_npcm4xx.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/i2c/i2c_npcm4xx.c b/drivers/i2c/i2c_npcm4xx.c
index 972dc1b12ff9..b2e71c102dbb 100755
--- a/drivers/i2c/i2c_npcm4xx.c
+++ b/drivers/i2c/i2c_npcm4xx.c
@@ -107,6 +107,8 @@ struct i2c_npcm4xx_data {
 #define I2C_INSTANCE(dev) (struct i2c_reg *)(I2C_DRV_CONFIG(dev)->base)
 
 
+int i2c_npcm4xx_recover_bus(const struct device *dev);
+
 /* This macro should be set only when in Master mode or when requesting Master mode.
  * Set START bit to CTL1 register of I2C module, but exclude STOP bit, ACK bit.
  */
@@ -947,6 +949,17 @@ static int i2c_npcm4xx_init(const struct device *dev)
 		data->slave_cfg[i] = NULL;
 	}
 
+	if((inst->SMBnCST & BIT(NPCM4XX_SMBnCST_BB)) &&
+			(!IS_BIT_SET(inst->SMBnCTL3, NPCM4XX_SMBnCTL3_SCL_LVL) ||
+			!IS_BIT_SET(inst->SMBnCTL3, NPCM4XX_SMBnCTL3_SDA_LVL))) {
+		if(i2c_npcm4xx_recover_bus(dev)) {
+			LOG_ERR("lines are low SCL: %d SDA: %d",
+					IS_BIT_SET(inst->SMBnCTL3, NPCM4XX_SMBnCTL3_SCL_LVL),
+					IS_BIT_SET(inst->SMBnCTL3, NPCM4XX_SMBnCTL3_SDA_LVL));
+			return -EIO;
+		}
+	}
+
 	return 0;
 }
 
@@ -1207,7 +1220,7 @@ static const struct i2c_driver_api i2c_npcm4xx_driver_api = {
 			      I2C_NPCM4XX_CTRL_INIT_FUNC(inst),			 \
 			      NULL,						 \
 			      &i2c_npcm4xx_data_##inst, &i2c_npcm4xx_cfg_##inst, \
-			      PRE_KERNEL_1, CONFIG_KERNEL_INIT_PRIORITY_DEVICE,	 \
+			      POST_KERNEL, CONFIG_KERNEL_INIT_PRIORITY_DEVICE,	 \
 			      &i2c_npcm4xx_driver_api);				 \
 										 \
 	I2C_NPCM4XX_CTRL_INIT_FUNC_IMPL(inst)
-- 
2.17.1

